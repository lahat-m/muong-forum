generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?  @unique
  email     String   @unique
  firstName String?
  lastName  String?
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Event {
  id           Int          @id @default(autoincrement())
  eventPoster  String?
  title        String
  eventFocus   String?
  description  String
  guestName    String
  guestDesc    String?
  date         DateTime
  location     String
  locationType locationType
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")

  registrations EventRegistration[]
}

model Participant {
  id    Int    @id @default(autoincrement())
  name  String
  email String
  phone String
  sex   String

  registrations EventRegistration[]
}

model EventRegistration {
  id               Int      @id @default(autoincrement())
  eventId          Int
  participantId    Int
  registrationDate DateTime @default(now()) @map("registration_date")

  // Add onDelete: Cascade to remove registrations automatically when an event is deleted.
  event       Event       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  participant Participant @relation(fields: [participantId], references: [id])

  @@unique([eventId, participantId])
}

enum locationType {
  ONLINE
  ONSITE
}
